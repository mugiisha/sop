syntax = "proto3";

package sopVersionTrackingService;

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;

// Service for managing SOP version tracking
service SopVersionTrackingService {
  // Retrieve all SOPs with version details
  rpc getAllSops (Empty) returns (SopListResponse);

  // Retrieve a specific SOP with its version history
  rpc getSopById (GetSopByIdRequest) returns (SopResponse);

  // Retrieve only version history for an SOP
  rpc getSopVersionHistory (GetSopByIdRequest) returns (SopVersionListResponse);
}

// SOP (Standard Operating Procedure) data structure
message Sop {
  string id = 1; // Unique SOP ID
  string title = 2; // Title of the SOP
  string content = 3; // SOP content
  string documentUrl = 4; // Document URL
  string imageUrl = 5; // Associated image URL
  string status = 6; // Status (e.g., "Draft", "Published")
  string version = 7; // Current version
  string visibility = 8; // Visibility level
  repeated WorkflowStage workflowStages = 9; // Workflow stages
  string departmentId = 10; // Department ID
  google.protobuf.Timestamp createdAt = 11; // SOP creation timestamp
  google.protobuf.Timestamp updatedAt = 12; // Last update timestamp
}

// Workflow Stage structure
message WorkflowStage {
  string id = 1; // Unique stage ID
  string sopId = 2; // Associated SOP ID
  string roleRequired = 3; // Role required (e.g., "Author", "Reviewer")
  string userId = 4; // User ID assigned to this stage
  string approvalStatus = 5; // Approval status (e.g., "Pending", "Approved")
  string comments = 6; // Comments, if any
  google.protobuf.Timestamp createdAt = 7; // Stage creation timestamp
  google.protobuf.Timestamp updatedAt = 8; // Last update timestamp
}

// Request to retrieve an SOP by ID
message GetSopByIdRequest {
  string sopId = 1; // ID of the SOP
}

// Response containing a single SOP
message SopResponse {
  Sop sop = 1; // SOP details
}

// Response containing a list of SOPs
message SopListResponse {
  repeated Sop sops = 1; // List of SOPs
}

// Response containing version history for an SOP
message SopVersionListResponse {
  repeated string versions = 1; // List of version strings
}

// Empty message for simple requests
message Empty {}
