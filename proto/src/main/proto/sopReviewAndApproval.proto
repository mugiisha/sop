syntax = "proto3";


package com.sopApproval;

option java_multiple_files = true;



// SOP Service
service SOPService {
  rpc CreateSOP (SOPRequest) returns (SOPResponse);
  rpc GetSOP (SOPByIdRequest) returns (SOPResponse);
  rpc GetAllSOPs (Empty) returns (ListSOPsResponse);
  rpc UpdateSOP (UpdateSOPRequest) returns (SOPResponse);
  rpc DeleteSOP (SOPByIdRequest) returns (DeleteResponse);
}

// Workflow Stage Service
service WorkflowStageService {
  rpc CreateWorkflowStage (WorkflowStageRequest) returns (SOPResponse);
  rpc UpdateWorkflowStageStatus (UpdateStageStatusRequest) returns (SOPResponse);
  rpc GetWorkflowStageById (GetStageByIdRequest) returns (WorkflowStageResponse);
  rpc GetWorkflowStagesBySOP (GetStagesBySOPRequest) returns (GetStagesBySOPResponse);
  rpc DeleteWorkflowStage (GetStageByIdRequest) returns (DeleteResponse);
}

// Comment Service
service CommentService {
  rpc AddComment (AddCommentRequest) returns (CommentResponse);
  rpc GetCommentsByStage (GetCommentsByStageRequest) returns (ListCommentsResponse);
  rpc DeleteComment (DeleteCommentRequest) returns (DeleteResponse);
}

// SOP Messages
message SOPRequest {
  string title = 1;
  string description = 2;
  string departmentId = 3;
  string visibility = 4;
}

message SOPByIdRequest {
  string sopId = 1;
}

message UpdateSOPRequest {
  string sopId = 1;
  string title = 2;
  string description = 3;
  string departmentId = 4;
  string visibility = 5;
}

message SOPResponse {
  string sopId = 1;
  string title = 2;
  string description = 3;
  string status = 4;
  string departmentId = 5;
  string visibility = 6;
  repeated WorkflowStageResponse workflowStages = 7;
  string createdAt = 8;
  string updatedAt = 9;
}

message ListSOPsResponse {
  repeated SOPResponse sops = 1;
}

message DeleteResponse {
  string message = 1;
}

// Workflow Stage Messages
message WorkflowStageRequest {
  string sopId = 1;
  string name = 2;
  string roleRequired = 3;
  string assignedUser = 4;
}

message UpdateStageStatusRequest {
  string stageId = 1;
  string action = 2;
}

message GetStageByIdRequest {
  string stageId = 1;
}

message GetStagesBySOPRequest {
  string sopId = 1;
}

message WorkflowStageResponse {
  string stageId = 1;
  string sopId = 2;
  string name = 3;
  string roleRequired = 4;
  string assignedUser = 5;
  string approvalStatus = 6;
  string createdAt = 7;
  string updatedAt = 8;
}

message GetStagesBySOPResponse {
  repeated WorkflowStageResponse stages = 1;
}

// Comment Messages
message AddCommentRequest {
  string stageId = 1;
  string userId = 2;
  string content = 3;
}

message GetCommentsByStageRequest {
  string stageId = 1;
}

message DeleteCommentRequest {
  string commentId = 1;
}

message CommentResponse {
  string commentId = 1;
  string stageId = 2;
  string userId = 3;
  string content = 4;
  string createdAt = 5;
}

message ListCommentsResponse {
  repeated CommentResponse comments = 1;
}

// Empty message
message Empty {}

